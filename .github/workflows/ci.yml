name: CI

on:
  push:
    branches: main
    tags:
      - 'v*.*.*'
  pull_request:
    types: [opened, synchronize, reopened]
    branches: main

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    -
      name: Checkout
      uses: actions/checkout@v2
    - name: Test
      run: docker-compose -f test/docker-compose.yml run test

  publish:
    name: Publish to Docker Hub
    if: github.event_name == 'push'
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: europeana/www-gateway
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
    outputs:
      docker-image-digest: ${{ steps.docker_build.outputs.digest }}

  deploy-main-to-test:
    name: Deploy main branch to test environment
    if: github.ref == 'refs/heads/main'
    environment: test
    needs: [publish]
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Deploy to Cloud Foundry
        uses: ./.github/actions/cloud-foundry-deploy
        with:
          api: ${{ secrets.CF_API }}
          username: ${{ secrets.CF_USERNAME }}
          password: ${{ secrets.CF_PASSWORD }}
          org: ${{ secrets.CF_ORG }}
          space: ${{ secrets.CF_SPACE }}
          app-name: ${{ secrets.CF_APP_NAME }}
          docker-image: europeana/www-gateway@${{ needs.publish.outputs.docker-image-digest }}

  deploy-tag-to-production:
    name: Deploy tag to production environment
    if: startsWith(github.ref, 'refs/tags/v')
    environment: production
    needs: [publish]
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Deploy to Cloud Foundry
        uses: ./.github/actions/cloud-foundry-deploy
        with:
          api: ${{ secrets.CF_API }}
          username: ${{ secrets.CF_USERNAME }}
          password: ${{ secrets.CF_PASSWORD }}
          org: ${{ secrets.CF_ORG }}
          space: ${{ secrets.CF_SPACE }}
          app-name: ${{ secrets.CF_APP_NAME }}
          docker-image: europeana/www-gateway@${{ needs.publish.outputs.docker-image-digest }}
