server {
  listen       80;
  listen  [::]:80;
  server_name  localhost;

  resolver ${RESOLVER};

  # EDM schema content negotiation
  location ~ ^/schemas/edm/(\w+)?$ {
    if ($http_accept ~* "application/rdf\+xml|rdf/xml") {
      return 303 /schemas/edm/rdf/edm.owl;
    }
    if ($http_accept ~* "application/ld\+json|application/json") {
      return 303 /schemas/edm/rdf/edm.jsonld;
    }
    if ($http_accept ~* "text/turtle|application/turtle|application/x-turtle") {
      return 303 /schemas/edm/rdf/edm.ttl;
    }
    if ($http_accept ~* "text/n3|text/rdf\+n3|application/n3") {
      return 303 /schemas/edm/rdf/edm.n3;
    }
    if ($http_accept ~* "application/n-triples|application/ntriples|text/nt") {
      return 303 /schemas/edm/rdf/edm.nt;
    }
    return 303 https://pro.europeana.eu/edm-documentation;
  }

  # Record API v1 item redirection
  location ~ ^/api/v1/record/(\w+)/(\w+).html$ {
    return 301 /item/$1/$2;
  }

  # Older record notation redirection
  location ~ ^/resolve/record/(\w+)/(\w+)$ {
    return 301 /item/$1/$2;
  }

  # Enforce https:// on Record API v2 requests
  location ~ ^/api/v2(.*)$ {
    if ($http_x_forwarded_proto = "http") {
      return 301 https://$host$request_uri;
    }
  }

  # Reverse proxy /api/annotations to Annotation API
  location ~ ^/api/annotations/(.*) {
    proxy_pass ${ANNOTATION_API_PROTO}://${ANNOTATION_API_HOST}/annotation/$1$is_args$args;
    proxy_set_header Host ${ANNOTATION_API_HOST};
  }

  # Reverse proxy /api/entities to Entity API
  location ~ ^/api/entities/(.*) {
    proxy_pass ${ENTITY_API_PROTO}://${ENTITY_API_HOST}/entity/$1$is_args$args;
    proxy_set_header Host ${ENTITY_API_HOST};
  }

  # Reverse proxy /api/fulltext to Fulltext API
  location ~ ^/api/fulltext/(.*) {
    proxy_pass ${FULLTEXT_API_PROTO}://${FULLTEXT_API_HOST}/presentation/$1$is_args$args;
    proxy_set_header Host ${FULLTEXT_API_HOST};
  }

  # Reverse proxy /sitemap-record* and /sitemap-entity* to Sitemap API
  location ~ ^(/sitemap-(record|entity).+) {
    proxy_pass ${SITEMAP_API_PROTO}://${SITEMAP_API_HOST}/$2$1$is_args$args;
    proxy_set_header Host ${SITEMAP_API_HOST};
  }

  # Reverse proxy /api to Record API
  location ~ ^/api {
    proxy_pass ${RECORD_API_PROTO}://${RECORD_API_HOST};
    proxy_set_header Host ${RECORD_API_HOST};
  }

  # Serve static files
  location / {
    root /usr/share/nginx/html;
    try_files $uri $uri @portal;
  }

  # Reverse proxy everything else to the Portal
  location @portal {
    proxy_pass ${PORTAL_PROTO}://${PORTAL_HOST};
    proxy_set_header Host ${PORTAL_HOST};
  }

  # TODO:
  # * Disallow robots if env var DISALLOW_ROBOTS is set to 1
  # * Old locations for some pages we need to be backwards compatible with
  # * Obsolete and invalid pages
  # * Old style sitemap requests - STILL NEEDED?
}
